# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Task {
  _id: String!
  description: String!
  createdBy(populate: Boolean!): User!
  inCharge(populate: Boolean!): [User!]!

  """Created At"""
  createdAt: DateTime!

  """Updated At"""
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TaskColumn {
  _id: String!
  columnName: String!
  sequence: Float!
  createdBy(populate: Boolean!): User!
  tasks(populate: Boolean!): [Task!]!

  """Created At"""
  createdAt: DateTime!

  """Updated At"""
  updatedAt: DateTime!
}

type Project {
  _id: String!
  projectName: String!
  description: String!
  status: String!
  techStacks: [String!]!
  createdBy(populate: Boolean!): User!
  unconfirmedMembers(populate: Boolean!): [User!]!
  confirmedMembers(populate: Boolean!): [User!]!
  rejectedInviteMembers: [User!]!
  taskColumns(populate: Boolean!): [TaskColumn!]!

  """Created At"""
  createdAt: DateTime!

  """Updated At"""
  updatedAt: DateTime!
}

type Team {
  _id: String!
  teamName: String!
  members: [User!]!
  createdBy: User!
  projects: [Project!]!

  """Created At"""
  createdAt: DateTime!

  """Updated At"""
  updatedAt: DateTime!
}

type User {
  _id: String!
  email: String!
  name: String!
  password: String!
  code: String!
  photo: String
  skills: [String!]
  portfolio: String
  verified: Boolean!
  colleagues: [User!]!
  myPendingInvitesRequest: [User!]!
  myPendingInvitesRespond: [User!]!
  verifiedTeams: [Team!]!
  unverifiedTeams: [Team!]!

  """Created At"""
  createdAt: DateTime!

  """Updated At"""
  updatedAt: DateTime!
}

type Query {
  findUser(input: FindUserInput!): User!
  myInfo: User!
  findUsers(input: FindUsersInput!): [User!]!
  getProject(_id: String!): Project!
  getProjects(input: FindProjectsInput!): [Project!]!
  getTaskColumn(_id: String!): TaskColumn!
  getTaskColumns(input: FindTaskColumnsInput!): [TaskColumn!]!
  getTask(_id: String!): Task!
  getTasks(input: FindTasksInput!): [Task!]!
}

input FindUserInput {
  _id: String
  email: String
}

input FindUsersInput {
  _ids: [String!]
}

input FindProjectsInput {
  _ids: [String!]
  status: String
  confirmedMembers: [String!]
  unconfirmMembers: [String!]
}

input FindTaskColumnsInput {
  _ids: [String!]
  projectId: String
}

input FindTasksInput {
  _ids: [String!]
  taskColumnId: String
}

type Mutation {
  signup(input: SignupInput!): User!
  signin(input: SigninInput!): String!
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  createProject(input: CreateProjectInput!): Project!
  inviteResponse(input: EditProjectInput!): Project!
  createTaskColumn(input: CreateTaskColumnInput!): TaskColumn!
  editTaskColumn(input: EditTaskColumnInput!): TaskColumn!
  createTask(input: CreateTaskInput!): Task!
  editTask(input: EditTaskInput!): Task!
}

input SignupInput {
  email: String!
  name: String!
  password: String!
  photo: String
}

input SigninInput {
  email: String!
  password: String!
}

input ForgotPasswordInput {
  email: String!
  code: String
  password: String
}

input CreateProjectInput {
  projectName: String!
  description: String
  techStacks: [String!]
  unconfirmMembers: [String!]
}

input EditProjectInput {
  _id: String!
  inviteAction: String
  taskColumns: [String!]
}

input CreateTaskColumnInput {
  columnName: String!
  projectId: String
  sequence: Float
}

input EditTaskColumnInput {
  _id: String!
  columnName: String
  sequence: Float
  tasks: [String!]
}

input CreateTaskInput {
  description: String!
  inCharge: [String!]
  taskColumnId: String
}

input EditTaskInput {
  _id: String!
  description: String
}